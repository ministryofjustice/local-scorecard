name: Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
env:
  KUBE_NAMESPACE: ${{ secrets.KUBE_NAMESPACE }}

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: make .built-image

      - name: Push to ECR
        id: ecr
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          region: eu-west-2
          local-image: ministryofjustice/local-scorecard
          image: ${{ secrets.ECR_NAME }}:${{ github.sha }}
      - name: Update image tag
        env:
          ECR_URL: ${{ secrets.ECR_NAME }}
        run: export IMAGE_TAG=${{ github.sha }} && cat kubectl_deploy/deployment.tpl | envsubst > kubectl_deploy/deployment.yaml
      - name: Authenticate to the cluster
        env:
          KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER }}
        run: |
          echo "Cluster is: ${KUBE_CLUSTER}. \nNamespace is: ${{ secrets.KUBE_NAMESPACE }}"
          echo "${{ secrets.KUBE_CERT }}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://api.${KUBE_CLUSTER}
          kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN }}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${{ secrets.KUBE_NAMESPACE }}
          kubectl config use-context ${KUBE_CLUSTER}
      - name: Apply the updated manifest
        run: |
          kubectl -n ${KUBE_NAMESPACE} apply -f kubectl_deploy